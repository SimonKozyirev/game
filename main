import pygame
from random import randint

pygame.init()
screen = pygame.display.set_mode((400, 600))
done = False
is_grey = True
clock = pygame.time.Clock()

x1 = 150
y1 = 175

x2 = 300
r = 15

dx1 = 3
dy1 = 3
dx0 = 3
dy0 = 3

w = 80
ball1 = pygame.Rect(x1 - r, y1 - r, 2 * r, 2 * r)
platform = pygame.Rect(x1, 580, w, 10)
bonus1 = pygame.Rect(200, 0, r, r)
bonus2 = pygame.Rect(200, 0, r, r)
bonus3 = pygame.Rect(200, 0, r, r)
antibonus1 = pygame.Rect(200, 0, r, r)
antibonus2 = pygame.Rect(200, 0, r, r)
antibonus3 = pygame.Rect(200, 0, r, r)
b1e = False
b2e = False
b3e = False
a1e = False
a2e = False
a3e = False

b1g = 0
b3g = 0
a1g = 0
a3g = 0

block = []
width = 40
height = 20
hp = 3
hpt = pygame.font.Font(None, 36)
gg = pygame.font.Font(None, 60)
dggx = 2
dggy = 2
ggx = 10
ggy = 10
for i in range(4):
    for j in range(8):
        block.append(pygame.Rect(9 * (j + 1) + width * j, 40 + 5 * (i + 1) + height * i, width, height))

while not done:
    if hp == 0:
        screen.fill((0, 0, 0))
        text = gg.render("Game Over", True, (180, 0, 0))
        screen.blit(text, (ggx, ggy))
        ggx += dggx
        ggy += dggy
        if ggx + 250 >= screen.get_width():
            dggx = - abs(dggx)
        if ggx <= 0:
            dggx = abs(dggx)
        if ggy + 50 >= screen.get_height():
            dggy = - abs(dggy)
        if ggy <= 0:
            dggy = abs(dggy)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                done = True
    elif not block:
        screen.fill((0, 0, 0))
        text = gg.render("Victory", True, (180, 0, 0))
        screen.blit(text, (ggx, ggy))
        ggx += dggx
        ggy += dggy
        if ggx + 200 >= screen.get_width():
            dggx = - abs(dggx)
        if ggx <= 0:
            dggx = abs(dggx)
        if ggy + 50 >= screen.get_height():
            dggy = - abs(dggy)
        if ggy <= 0:
            dggy = abs(dggy)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                done = True
    else:
        screen.fill((0, 0, 0))

        text = hpt.render("hp: " + str(hp), True, (0, 180, 0))
        screen.blit(text, (20, 15))

        pygame.draw.ellipse(screen, (255, 128, 0), ball1)
        pygame.draw.rect(screen, (0, 0, 255), platform)

        for i in block:
            pygame.draw.rect(screen, (128, 128, 128), i)

        ball1.x += dx1*dx0
        ball1.y += dy1*dy0

        if b1e:
            pygame.draw.ellipse(screen, (0, 0, 255), bonus1)
            bonus1.y += 5
            if bonus1.colliderect(platform):
                b1g = 500
                b1e = False

        if b2e:
            pygame.draw.ellipse(screen, (0, 255, 0), bonus2)
            bonus2.y += 5
            if bonus2.colliderect(platform):
                hp+=1
                b2e = False

        if b3e:
            pygame.draw.ellipse(screen, (255, 0, 0), bonus3)
            bonus3.y += 5
            if bonus3.colliderect(platform):
                b3g = 300
                b3e = False

        if a1e:
            pygame.draw.ellipse(screen, (0, 0, 200), antibonus1)
            antibonus1.y += 5
            if antibonus1.colliderect(platform):
                a1g = 500
                a1e = False

        if a2e:
            pygame.draw.ellipse(screen, (0, 200, 0), antibonus2)
            antibonus2.y += 5
            if antibonus2.colliderect(platform):
                hp -= 1
                a2e = False

        if a3e:
            pygame.draw.ellipse(screen, (200, 0, 0), antibonus3)
            antibonus3.y += 5
            if antibonus3.colliderect(platform):
                a3g = 300
                a3e = False

        if b1g > 0 and a1g <= 0:
            platform.w = 2 * w
            b1g -= 1

        elif b1g <= 0 and a1g > 0:
            platform.w = 0.5 * w
            a1g -= 1
        else:
            platform.w = w
            a1g -= 1
            b1g -= 1

        if b3g > 0 and a3g <= 0:
            dx0 = 0.5
            dy0 = 0.5
            b3g -= 1
        elif a3g > 0 and b3g <= 0:
            dx0 = 2
            dy0 = 2
            a3g -= 1
        else:
            dx0 = 1
            dy0 = 1
            a3g -= 1
            b3g -= 1

        if ball1.x + 2 * r >= screen.get_width():
            dx1 = -abs(dx1)
        if ball1.x <= 0:
            dx1 = abs(dx1)

        if ball1.y <= 0:
            dy1 = -dy1

        if ball1.y + r >= screen.get_height():
            ball1.y = 150
            hp -= 1
            dx1 *= 1.25

        if ball1.colliderect(platform):
            dy1 = -abs(dy1)

        for k in block:
            if ball1.colliderect(k):
                if k.x <= ball1.x <= k.x + width:
                    dy1 = (-dy1 + randint(-10, 10) * 0.1)
                else:
                    dx1 = (-dx1 + randint(-10, 10) * 0.1)
                block.remove(k)
                if randint(0, 10) == 2 and not b1e:
                    bonus1.x = k.x + 10
                    bonus1.y = k.y + 5
                    b1e = True
                elif randint(0, 10) == 2 and not b2e:
                    bonus2.x = k.x + 10
                    bonus2.y = k.y + 5
                    b2e = True
                elif randint(0, 9) == 2 and not b3e:
                    bonus3.x = k.x + 10
                    bonus3.y = k.y + 5
                    b3e = True
                elif randint(0, 9) == 2 and not a1e:
                    antibonus1.x = k.x + 10
                    antibonus1.y = k.y + 5
                    a1e = True
                elif randint(0, 8) == 2 and not a2e:
                    antibonus2.x = k.x + 10
                    antibonus2.y = k.y + 5
                    a2e = True
                elif randint(0, 8) == 2 and not a3e:
                    antibonus3.x = k.x + 10
                    antibonus3.y = k.y + 5
                    a3e = True

        pressed = pygame.key.get_pressed()
        if (pressed[pygame.K_LEFT] or pressed[pygame.K_a]) and platform.x >= -w * 0.5:
            platform.x -= 3
        if (pressed[pygame.K_RIGHT] or pressed[pygame.K_d]) and platform.x <= screen.get_width() - w * 0.5:
            platform.x += 3

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                done = True

    clock.tick(60)

    pygame.display.flip()
